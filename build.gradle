buildscript {
    repositories {
        jcenter() // this applies only to the Gradle 'Shadow' plugin
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

plugins {
    id 'java'
    id 'application'
    // shadow plugin to produce fat JARs
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id "com.github.sherter.google-java-format" version '0.8'
}


// artifact properties
group = 'com.ververica.field.state.migration'
version = '0.1-SNAPSHOT'
jar.archiveName = "${jar.baseName}.${jar.extension}"
mainClassName = 'com.ververica.playground.state.StreamingJob'
description = """State Migration Playground"""

ext {
    javaVersion = '1.8'
    flinkVersion = '1.10.0'
    scalaBinaryVersion = '2.11'
    slf4jVersion = '1.7.15'
    log4jVersion = '2.10.0'
    mockitoVersion = '1.10.19'
    junitVersion = '4.12'
    jacksonVersion = '2.10.3'
    hamcrestVersion = '1.3'
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

applicationDefaultJvmArgs = ["-Dlog4j.configuration=log4j2.properties"]

// declare where to find the dependencies of your project
repositories {
    mavenCentral()
    maven { url "https://repository.apache.org/content/repositories/snapshots/" }
}

// NOTE: We cannot use "compileOnly" or "shadow" configurations since then we could not run code
// in the IDE or with "gradle run". We also cannot exclude transitive dependencies from the
// shadowJar yet (see https://github.com/johnrengelman/shadow/issues/159).
// -> Explicitly define the // libraries we want to be included in the "flinkShadowJar" configuration!
configurations {
    flinkShadowJar // dependencies which go into the shadowJar

    // always exclude these (also from transitive dependencies) since they are provided by Flink
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'force-shading'
    flinkShadowJar.exclude group: 'com.google.code.findbugs', module: 'jsr305'
    flinkShadowJar.exclude group: 'org.slf4j'
    flinkShadowJar.exclude group: 'log4j'
}

// declare the dependencies for your production and test code
dependencies {
    // --------------------------------------------------------------
    // Compile-time dependencies that should NOT be part of the
    // shadow jar and are provided in the lib folder of Flink
    // --------------------------------------------------------------
    compile "org.apache.flink:flink-java:${flinkVersion}"
    compile "org.apache.flink:flink-streaming-java_${scalaBinaryVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-runtime-web_${scalaBinaryVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-statebackend-rocksdb_$scalaBinaryVersion:$flinkVersion"

    compile "org.apache.flink:flink-state-processor-api_${scalaBinaryVersion}:${flinkVersion}"

    // Logging
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-jcl:${log4jVersion}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    // --------------------------------------------------------------
    // Test dependencies
    // --------------------------------------------------------------
    compile "junit:junit:${junitVersion}"
    compile "org.apache.flink:flink-test-utils_${scalaBinaryVersion}:${flinkVersion}"
    compile "org.apache.flink:flink-streaming-java_${scalaBinaryVersion}:${flinkVersion}:tests"
    compile "org.apache.flink:flink-runtime_${scalaBinaryVersion}:${flinkVersion}:tests"
    compile "org.apache.flink:flink-core:$flinkVersion:tests"
    compile "org.apache.flink:flink-tests:$flinkVersion:tests"
    compile "org.mockito:mockito-all:${mockitoVersion}"
    compile "org.hamcrest:hamcrest-all:${hamcrestVersion}"

    // --------------------------------------------------------------
    //Project dependencies
    // --------------------------------------------------------------
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    // --------------------------------------------------------------
    // Dependencies that should be part of the shadow jar, e.g.
    // connectors. These must be in the flinkShadowJar configuration!
    // --------------------------------------------------------------
    flinkShadowJar "org.apache.avro:avro:1.7.7"
    flinkShadowJar "org.apache.flink:flink-avro:${flinkVersion}"
    flinkShadowJar "org.apache.flink:flink-avro-confluent-registry:${flinkVersion}"

}

// make compileOnly dependencies available for tests:
sourceSets {
    main.compileClasspath += configurations.flinkShadowJar
    main.runtimeClasspath += configurations.flinkShadowJar

    test.compileClasspath += configurations.flinkShadowJar
    test.runtimeClasspath += configurations.flinkShadowJar

    javadoc.classpath += configurations.flinkShadowJar
}

run.classpath = sourceSets.main.runtimeClasspath

jar {
    manifest {
        attributes 'Built-By': System.getProperty('user.name'),
                'Build-Jdk': System.getProperty('java.version')
    }
}

configurations { all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j' }

shadowJar {
    configurations = [project.configurations.flinkShadowJar]
}

task resolveDependencies {
    doLast {
        project.rootProject.allprojects.each { subProject ->
            subProject.buildscript.configurations.each { configuration ->
                if (configuration.canBeResolved) configuration.resolve()
            }
            subProject.configurations.each { configuration ->
                if (configuration.canBeResolved) configuration.resolve()
            }
        }
    }
}